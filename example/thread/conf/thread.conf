#!/usr/bin/perl
use strict;
use warnings;
use Zeta::Serializer::JSON;
use Carp;
use IO::Socket::INET;
use Zeta::Run;
use DBI;
use Carp;
use Zeta::IPC::MsgQ;
use Net::Stomp;


#
# 返回值
#
my $cfg = {

    # 数据库配置 
    db => {
        dsn    => "dbi:DB2:$ENV{DB_NAME}",
        user   => "$ENV{DB_USER}",
        pass   => "$ENV{DB_PASS}",
        schema => "$ENV{DB_SCHEMA}",
    },

    # stomp
    stomp => {
        host => '127.0.0.1',
        port => '61618',
    },

};


#
# 获取应用配置
#
helper zconfig => sub { $cfg };

#
# 连接数据库
#
helper dbh  => sub {
    my $cfg = zkernel->zconfig();
    my $dbh = DBI->connect(
        @{$cfg->{db}}{qw/dsn user pass/},
        {
            RaiseError       => 1,
            PrintError       => 0,
            AutoCommit       => 0,
            FetchHashKeyName => 'NAME_lc',
            ChopBlanks       => 1,
            InactiveDestroy  => 1,
        }
    );
    unless($dbh) {
        zlogger->error("can not connet db[@{$cfg->{db}}{qw/dsn user pass/}], quit");
        exit 0;
    }

    # 设置默认schema
    $dbh->do("set current schema $cfg->{db}{schema}")
        or confess "can not set current schema $cfg->{db}{schema}";
    return $dbh;
};

#
# 连接stomp
#
helper zstomp => sub {
    my $cfg = shift->zconfig();
    # 连接stomp
    my $stp = Net::Stomp->new({
        hostname => $cfg->{stomp}{host},
        port     => $cfg->{stomp}{port} ,
    }) or confess <<STOMP;
Net::Stomp failed with 
    { 
        hostname => $cfg->{stomp}{host}, 
        port     => $cfg->{stomp}{port} 
}
STOMP
    $stp->connect({ login => 'hello', passcode => 'there' });
    return $stp;
};



#
# 子进程需要的通用初始化
#
helper zsetup => sub {
};


